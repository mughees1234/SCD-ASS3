/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment3.scd;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohammad Qayyum
 */
public class PatientAdmitInformation extends javax.swing.JFrame {

    /**
     * Creates new form PatientAdmitInformation
     */
    public PatientAdmitInformation() throws SQLException, ClassNotFoundException {
        initComponents();
        updateDB();
         RoomUpdateDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        PID = new javax.swing.JTextField();
        PN = new javax.swing.JTextField();
        G = new javax.swing.JTextField();
        BG = new javax.swing.JTextField();
        D = new javax.swing.JTextField();
        AD = new javax.swing.JTextField();
        RN = new javax.swing.JTextField();
        DID = new javax.swing.JTextField();
        DN = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPatient = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        RT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        RC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPatient1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)), "Patient Info"));

        jLabel1.setText("Patient ID");

        jLabel2.setText("Patient Name");

        jLabel3.setText("Gender");

        jLabel4.setText("Blood Group");

        jLabel5.setText("Disease");

        jLabel6.setText("Admit Date");

        jLabel7.setText("Room NO.");

        jLabel8.setText("Doctor ID");

        jLabel9.setText("Doctor Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BG)
                                    .addComponent(D)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(27, 27, 27))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AD, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RN, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DID)
                                .addContainerGap(76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DN, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(37, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(BG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(AD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(DID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(DN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(RN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(157, Short.MAX_VALUE))
        );

        jPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Patient ID", "Patient Name", "Gender", "Blood Group", "Disease", "AdmitDate", "RoomNo", "DoctorID", "DoctorName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPatientMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jPatient);

        jButton1.setText("ADD NEW");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("UPDATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel10.setText("Room Type");

        RT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RTActionPerformed(evt);
            }
        });

        jLabel12.setText("Room Charges");

        RC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RCActionPerformed(evt);
            }
        });

        jPatient1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Room Type", "Room Charges"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jPatient1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPatient1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jPatient1);

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RC, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RT))
                                .addGap(61, 61, 61))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(304, 304, 304)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(732, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(RT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(RC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(50, 50, 50))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 42, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         Connection connection = null;
        PreparedStatement pst = null;
         PreparedStatement pst1 = null;
        ResultSet rs = null;
        int q, i;
        try{ 
        connection = Database.getConnection();
        }
        catch(Exception e){
        System.out.println("Exception");
        }
        try 
    {
   pst = connection.prepareStatement("INSERT INTO admission(PatientID, PatientName, Gender, BloodGroup, Disease, AdmitDate, RoomNo, DoctorID, DoctorName)value(?,?,?,?,?,?,?,?,?)");
   pst.setString(1, PID.getText());
   pst.setString(2, PN.getText());
   pst.setString(3, G.getText());
   pst.setString(4, BG.getText());
   pst.setString(5, D.getText());
   pst.setString(6, AD.getText());
   pst.setString(7, RN.getText());
   pst.setString(8, DID.getText());
     pst.setString(9, DN.getText());
  
     
   pst1 = connection.prepareStatement("INSERT INTO room(RoomType, RoomCharges)value(?,?)");
   pst1.setString(1, RT.getText());
   pst1.setString(2, RC.getText());
   
   
   pst1.executeUpdate();
   pst.executeUpdate();
   JOptionPane.showMessageDialog(this, "Record Added");
   PID.setText("");
   PN.setText("");
   G.setText("");
   BG.setText("");
   D.setText("");
   AD.setText("");
   RN.setText("");
   DID.setText("");
   DN.setText("");
   
   PID.requestFocus();
   updateDB();
   RoomUpdateDb();
    }
         catch (SQLException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         DefaultTableModel Recordtable = (DefaultTableModel)jPatient.getModel();
         int SelectedRow = jPatient.getSelectedRow();
         
          DefaultTableModel RecordTable = (DefaultTableModel)jPatient1.getModel();
         int Selectedrow = jPatient1.getSelectedRow();
        Connection connection = null;
        PreparedStatement pst = null;
        PreparedStatement pst1 = null;
        ResultSet rs = null;
        int q, i;
        try{ 
        connection = Database.getConnection();
        }
        catch(Exception e){
        System.out.println("Exception");
        }
        try 
    {
        int id = Integer.parseInt(Recordtable.getValueAt(SelectedRow, 0).toString());
        int ID = Integer.parseInt(RecordTable.getValueAt(Selectedrow, 0).toString());
       
   pst = connection.prepareStatement("update admission set PatientID = ?, PatientName = ?, Gender = ?, BloodGroup = ?, Disease = ?, AdmitDate = ?, RoomNo = ?, DoctorID = ?, DoctorName = ? where id = ?");
   pst.setString(1, PID.getText());
   pst.setString(2, PN.getText());
   pst.setString(3, G.getText());
   pst.setString(4, BG.getText());
   pst.setString(5, D.getText());
   pst.setString(6, AD.getText());
   pst.setString(7, RN.getText());
   pst.setString(8, DID.getText());
     pst.setString(9, DN.getText());
    pst.setInt(10, id);
    
    
     pst1 = connection.prepareStatement("update room set RoomType = ?, RoomCharges = ? where ID = ?");
   pst1.setString(1, RT.getText());
   pst1.setString(2, RC.getText());
    pst1.setInt(3, ID);
    
     pst1.executeUpdate();
   pst.executeUpdate();
  
   JOptionPane.showMessageDialog(this, "Record Updated");
   updateDB();
   RoomUpdateDb();
    }
         catch (SQLException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPatientMouseClicked
        DefaultTableModel Recordtable = (DefaultTableModel)jPatient.getModel();
         int SelectedRow = jPatient.getSelectedRow();
         
         PID.setText(Recordtable.getValueAt(SelectedRow, 1).toString());
         PN.setText(Recordtable.getValueAt(SelectedRow, 2).toString());
         G.setText(Recordtable.getValueAt(SelectedRow, 3).toString());
          BG.setText(Recordtable.getValueAt(SelectedRow, 4).toString());
           D.setText(Recordtable.getValueAt(SelectedRow, 5).toString());
            AD.setText(Recordtable.getValueAt(SelectedRow, 6).toString());
            RN.setText(Recordtable.getValueAt(SelectedRow, 7).toString());
             DID.setText(Recordtable.getValueAt(SelectedRow, 8).toString());
             DN.setText(Recordtable.getValueAt(SelectedRow, 9).toString());
    }//GEN-LAST:event_jPatientMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         DefaultTableModel Recordtable = (DefaultTableModel)jPatient.getModel();
         int SelectedRow = jPatient.getSelectedRow();
         
           DefaultTableModel RecordTable = (DefaultTableModel)jPatient1.getModel();
         int Selectedrow = jPatient1.getSelectedRow();
       Connection connection = null;
        PreparedStatement pst = null;
        PreparedStatement pst1 = null;
        ResultSet rs = null;
        int q, i;
        try{ 
        connection = Database.getConnection();
        }
        catch(Exception e){
        System.out.println("Exception");
        }   
     try 
    {
        int id = Integer.parseInt(Recordtable.getValueAt(SelectedRow, 0).toString());
        int ID = Integer.parseInt(RecordTable.getValueAt(Selectedrow, 0).toString());
       int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record?","Warning",JOptionPane.YES_NO_OPTION);
       if(dialogResult == JOptionPane.YES_OPTION)
       {
        pst = connection.prepareStatement("delete from admission where id= ?");
        
    pst.setInt(1, id);
    pst1 = connection.prepareStatement("delete from room where ID= ?");
      pst1.setInt(1, ID);
      pst1.executeUpdate();
   pst.executeUpdate();
   JOptionPane.showMessageDialog(this, "Record Deleted");
   updateDB();
   RoomUpdateDb();
  PID.setText("");
   PN.setText("");
   G.setText("");
   BG.setText("");
   D.setText("");
   AD.setText("");
   RN.setText("");
   DID.setText("");
   DN.setText("");
  
   PID.requestFocus();
   
       }
       
   /*pst = connection.prepareStatement("update patient set PatientID = ?, PatientName = ?, ServiceCharges = ? where id = ?");
   pst.setString(1, PID.getText());
   pst.setString(2, PN.getText());
   pst.setString(3, G.getText());
    pst.setInt(4, id);
   pst.executeUpdate();
   JOptionPane.showMessageDialog(this, "Record Deleted");*/
   updateDB();
    }
         catch (SQLException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PatientUpdateDelete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void RTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RTActionPerformed

    private void RCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RCActionPerformed

    private void jPatient1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPatient1MouseClicked
       DefaultTableModel Recordtable1 = (DefaultTableModel)jPatient1.getModel();
         int SelectedRow1 = jPatient1.getSelectedRow();
         
         RT.setText(Recordtable1.getValueAt(SelectedRow1, 1).toString());
         RC.setText(Recordtable1.getValueAt(SelectedRow1, 2).toString());
    }//GEN-LAST:event_jPatient1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         setResizable(false);
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       List list = new List();
       list.setVisible(true);
       setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
     private void updateDB() throws SQLException, ClassNotFoundException
    {
     Connection connection = Database.getConnection();
     
      //Connection connection = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        int q, i;
        
    try 
    {
   pst = connection.prepareStatement("Select * FROM admission");
     rs = pst.executeQuery();
     ResultSetMetaData stData = rs.getMetaData();
     
     q = stData.getColumnCount();
     
     DefaultTableModel Recordtable = (DefaultTableModel)jPatient.getModel();
     Recordtable.setRowCount(0);
     
     while(rs.next())
     {
         Vector columnData = new Vector();
         
         for(i = 1; i <= q; i++)
         {
             columnData.add(rs.getString("Id"));
             columnData.add(rs.getString("PatientId"));
              columnData.add(rs.getString("PatientName"));
               columnData.add(rs.getString("Gender"));
                columnData.add(rs.getString("BloodGroup"));
                 columnData.add(rs.getString("Disease"));
                 columnData.add(rs.getString("AdmitDate"));
                  columnData.add(rs.getString("RoomNo"));
                  columnData.add(rs.getString("DoctorID"));
                   columnData.add(rs.getString("DoctorName"));
                   
         }
         Recordtable.addRow(columnData);
     }
    }
    catch(Exception ex){
        JOptionPane.showMessageDialog(null, ex);
    }
    }
     public void RoomUpdateDb() throws SQLException, ClassNotFoundException
     {
      Connection connection = Database.getConnection();
     
      //Connection connection = null;
        PreparedStatement pst1 = null;
        ResultSet rs1 = null;
        int q, i;
        
    try 
    {
   pst1 = connection.prepareStatement("Select * FROM room");
     rs1 = pst1.executeQuery();
     ResultSetMetaData stData = rs1.getMetaData();
     
     q = stData.getColumnCount();
     
     DefaultTableModel Recordtable1 = (DefaultTableModel)jPatient1.getModel();
     Recordtable1.setRowCount(0);
     
     while(rs1.next())
     {
         Vector columnData = new Vector();
         
         for(i = 1; i <= q; i++)
         {
             columnData.add(rs1.getString("Id"));
             columnData.add(rs1.getString("RoomType"));
              columnData.add(rs1.getString("RoomCharges"));
              
                   
         }
         Recordtable1.addRow(columnData);
     }
    }
    catch(Exception ex){
        JOptionPane.showMessageDialog(null, ex);
    }
     }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientAdmitInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientAdmitInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientAdmitInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientAdmitInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PatientAdmitInformation().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PatientAdmitInformation.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(PatientAdmitInformation.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AD;
    private javax.swing.JTextField BG;
    private javax.swing.JTextField D;
    private javax.swing.JTextField DID;
    private javax.swing.JTextField DN;
    private javax.swing.JTextField G;
    private javax.swing.JTextField PID;
    private javax.swing.JTextField PN;
    private javax.swing.JTextField RC;
    private javax.swing.JTextField RN;
    private javax.swing.JTextField RT;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jPatient;
    private javax.swing.JTable jPatient1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
